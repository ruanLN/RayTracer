{"name":"Raytracer","tagline":"trabalho pratico da disciplina de Fundamentos de Computação Gráfica, 2015/1. Integrantes do grupo: Pedro Teixeira, Ruan Leitão Nunes","body":"### Bem-vindo a página do trabalho final de FCG, 2015/1\r\nNa disciplina de Fundamentos de Computação Gráfica(FCG) do semestre 2015/1, foram ofertadas duas propostas de trabalho final, uma delas, a implementação de um jogo, Ludo Runner, e outra, a implementação de um Ray Tracer para cenas estáticas.\r\n\r\n### Instruções de compilação\r\nFaça clone/checkout da última versão estável (master) ou de desenvolvimento(develop, pode, e provavelmente conterá bugs). Para isto use os comandos:\r\n```\r\n$ git clone https://github.com/ruanLN/RayTracer.git\r\n$ git checkout origin/master #<- ou develop, no caso da versão em desenvolvimento\r\n$ git checkout -b master #<- ou develop, no caso da versão em desenvolvimento\r\n```\r\nO ultimo passo não é necessário, ele apenas cria um branch local para evitar de manter o repositório no estado \"HEAD_FETCH\", que pode ocasionar perda de dados.\r\nAtualmente para compilar é necessário abrir o projeto na pasta RayTracer/RayTracerNonQt utilizando o Qt Creator e dar build, em futuras versões planeja-se a adição de um Makefile.\r\n\r\n### Imagens geradas:\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss-reflect-lights-shadows-art.png?raw=true)\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss-reflect-lights-shadows-earth.png?raw=true)\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss-reflect-lights-shadows-tex.png?raw=true)\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss-reflect-lights-shadows.png?raw=true)\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss-reflect-lights-shadows-tex-ss1.png?raw=true)\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/face.png?raw=true)\r\n\r\nImagens com supersampling de 1(normal), 2, 4 e 8 (são lançados n^2 raios por pixel)\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss1-reflect-lights-shadows.png?raw=true)\r\n\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss2-reflect-lights-shadows.png?raw=true)\r\n\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss4-reflect-lights-shadows.png?raw=true)\r\n\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/scene01-zoom-ss8-reflect-lights-shadows.png?raw=true)\r\n\r\nImagem utilizando \"Normal Coloring\", que utiliza as normais da face para calcular sua cor (Sugerido em http://www.cs.rug.nl/svcg/ComputerGraphics/Raytracer)\r\n\r\n![](https://github.com/ruanLN/RayTracer/blob/develop/rayTracerNonQt/rayTracerNonQt/norml.jpg?raw=true)\r\n\r\n\r\n### Primitivas implementadas\r\n1. Esferas\r\n2. Triângulos\r\n\r\n### Descrição do arquivo de entrada\r\nO arquivo de entrada tem o formato YAML e foi baseado no arquivo do RayTracer de Gronigen, junto com o codigo existe um arquivo exemplo com todos comandos possíveis\r\n\r\n### Autores e Contribuições\r\nProjeto desenvolvido pelo grupo Ruan L. Nunes e Pedro Teixeira, o segundo tendo que se afastar durante o semestre.\r\n\r\n### Contato\r\nCaso tenha interesse no projeto, entrar em contato com rlnunes@inf.ufrgs.br","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}